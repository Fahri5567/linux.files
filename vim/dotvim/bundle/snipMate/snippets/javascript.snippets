# Prototype
snippet proto
	${1:class_name}.prototype.${2:method_name} =
	function(${3:first_argument}) {
		${4:// body...}
	};
# Function
snippet fun
	function ${1:function_name} (${2:argument})
	{
		${3:// body...}
	}${4}
# Anonymous Function
snippet f
	function(${1}) {${2}};
# if
snippet if
	if (${1:true})
	{
		${2:// body...}
	}
# short if
snippet iff
	if (${1:true})
		${2:// body...}

# comment block
snippet /*
	/**
	 * ${1}
	 */{$2}
# comment for functions
snippet /**
	/** Function: ${1:function_name}
	 *  ${2:short_desc}
	 *
	 *  ${3:long_desc}
	 *
	 *  Parameters:
	 *    (${4:type}) ${5:param_name} - ${6:param_desc}
	 *
	 *  Returns:
	 *    ${7:return_desc}
	 */${8}
snippet /***
	/** Function: ${1:function_name}
	 *  ${2:short_desc}
	 *
	 *  ${3:long_desc}
	 *
	 */${4}
# if ... else
snippet ife
	if (${1:true})
	{
		${2:// body...}
	}
	else
	{
		${3:// body...}
	};

# tertiary conditional
snippet t
	${1:/* condition */} ? ${2:a} : ${3:b}
# switch
snippet switch
	switch(${1:exp
	ression}) {
		case '${3:case}':
			${4:// code}
	
	break;
		${5}
		default:
	
	${2:// code}
	}
# case
snippet case
	case '${1:case}':
		${2:// code}
		break;
	${3}
# for (...) {...}
snippet for
	for (var ${2:i} = 0; $2 < ${1:Things}.length; $2${3:++}) {
		${4:$1[$2]}
	};
# for (...) {...} (Improved Native For-Loop)
snippet forr
	for (var ${2:i} = ${1:Things}.length - 1; $2 >= 0; $2${3:--}) {
		${4:$1[$2]}
	};
# while (...) {...}
snippet wh
	while (${1:/* condition */}) {
		${2:/* code */}
	}
# do...while
snippet do
	do {
		${2:/* code */}
	} while (${1:/* condition */});
# Object Method
snippet :f
	${1:method_name}: function(${2:attribute}) {
		${4}
	}${3:,}
# setTimeout function
snippet timeout
	setTimeout(function() {${3}}${2}, ${1:10};
# Get Elements
snippet get
	getElementsBy${1:TagName}('${2}')${3}
# Get Element
snippet gett
	getElementBy${1:Id}('${2}')${3}
